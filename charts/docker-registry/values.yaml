# -- Configure the Security Context for the Pod
podSecurityContext:
  fsGroup: 1000
  runAsUser: 1000

controller:
  # -- docker registry is stateless and we default to 2 replicas
  # Large environments should consider the autoscale option.
  replicas: 2

image:
  # -- image repository
  repository: docker.io/registry
  # -- image tag, defaults to the chart's appVersion
  tag: ""
  # -- image pull policy
  pullPolicy: IfNotPresent

imagePullSecrets: []

# -- Override the command(s) for the default container
command:
  - /bin/registry
  - serve
  - /etc/docker/registry/config.yml

# -- (Optional) Name of the manually created secret containing the
# [docker registry config file](https://docs.docker.com/registry/configuration/#list-of-configuration-options).
# If not provided, configmap must be populated.
configSecretName: ""

# -- Configure configMaps for the chart here.
# Additional configMaps can be added by adding a dictionary key similar to the 'config' object.
# @default -- See below
configmap:
  # -- default config for docker-compose. this is only suitable for validation.
  # Most deploymets will need to create a dedicated config.
  config:
    # -- Enables or disables the configMap
    enabled: true
    # -- configMap data content. Helm template enabled.
    data:
      config.yml: |-
        health:
          storagedriver:
            enabled: true
            interval: 10s
            threshold: 3
        http:
          addr: 0.0.0.0:{{ .Values.service.main.ports.http.port }}
          debug:
            addr: 0.0.0.0:{{ .Values.prometheus.port }}
            prometheus:
              enabled: true
              path: {{ .Values.prometheus.path }}
          headers:
            X-Content-Type-Options: [nosniff]
          secret: asecretfordevelopment
        log:
          fields:
            service: registry
        proxy:
          remoteurl: https://registry-1.docker.io
        storage:
          cache:
            blobdescriptor: inmemory
          delete:
            enabled: true
          inmemory:
          maintenance:
            uploadpurging:
              enabled: true
              age: 168h
              interval: 24h
              dryrun: false
        version: 0.1

# -- Configure the services for the chart here.
# Additional services can be added by adding a dictionary key similar to the 'main' service.
# @default -- See below
service:
  main:
    # -- Configure the Service port information here.
    # Additional ports can be added by adding a dictionary key similar to the 'http' service.
    # @default -- See below
    ports:
      http:
        # -- Enables or disables the port
        enabled: true
        # -- Make this the primary port (used in probes, notes, etc...)
        # If there is more than 1 service, make sure that only 1 port is marked as primary.
        primary: true
        # -- The port number
        port: 5000
        # -- Port protocol.
        protocol: HTTP

# -- Configure the ingresses for the chart here.
# Additional ingresses can be added by adding a dictionary key similar to the 'main' ingress.
# @default -- See below
ingress:
  main:
    # -- Enables or disables the ingress
    enabled: false
    hosts:
      -  # -- Host address. Helm template can be passed.
        host: "docker-registry.local"
    # -- Provide additional annotations which may be required.
    annotations: {}
      # kubernetes.io/tls-acme: "true"

prometheus:
  # -- Enables or disables prometheus metrics
  enabled: false
  # -- Prometheus metrics endpoint port
  port: 5001
  # -- Prometheus metrics endpoint path
  path: "/metrics"
  # -- Prometheus scrape interval
  interval: "15s"
